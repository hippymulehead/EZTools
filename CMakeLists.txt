## RA Build Template
CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
###################################
# Version Info (Start Edits)
###################################
SET(CPACK_PACKAGE_VERSION_MAJOR "6")
SET(CPACK_PACKAGE_VERSION_MINOR "0")
SET(CPACK_PACKAGE_VERSION_PATCH "16")
SET(CPACK_PACKAGE_RELEASE 1)
SET(_PACKAGE_NAME "eztools")
SET(CPACK_PACKAGE_CONTACT "mromans@romansaudio.com")
SET(CPACK_PACKAGE_VENDOR "Romans Audio")
SET(CPACK_PACKAGE_DESCRIPTION "C++ Tools")
SET(CMAKE_INSTALL_DIR "/usr/bin")
SET(_INCLUDE_DIR "/usr/include/eztools")
SET(_DEB_SECTION "devel")
## EL 8 & Fedora Required Packages
SET(RPM_REQUIRED_PACKAGES "libsodium >= 0.9.0, libsodium-devel >= 0.9.0")
## Deb and Ubuntu based  Required Packages
SET(DEB_REQUIRED_PACKAGES "libsodium23, libsodium-dev, libssl3, libssl-dev")
## EL 8 Link Libs
SET(_TLL stdc++fs ssl crypto sodium resolv cryptopp pthread mysqlpp)
## FC Link Libs
SET(_TLL ssl crypto sodium resolv cryptopp pthread mysqlpp)
## Ubuntu Link Libs
SET(_TLL ssl crypto sodium resolv cryptopp pthread mysqlpp)
###################################
# Don't Edit Below Here
###################################
SET(PACKAGE_VERSION "${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}")
MESSAGE("** PACKAGE_VERSION = ${PACKAGE_VERSION}")
PROJECT("${_PACKAGE_NAME}")
STRING (REGEX MATCH "el|fc" os_name ${CMAKE_SYSTEM})
STRING (REGEX MATCH "el[0-9]|fc[0-9][0-9]" os_version ${CMAKE_SYSTEM})
MESSAGE(** os_name = ${os_name})
SET(CMAKE_CXX_STANDARD 17)
if (os_name STREQUAL "el")
    SET(EL_VERSION "8")
    SET(REQUIRED_PACKAGES ${CENTOS8_REQUIRED_PACKAGES})
    set(CMAKE_CXX_STANDARD_REQUIRED ON)
    link_libraries(-lstdc++fs)
elseif(os_name STREQUAL "fc")
    SET(REQUIRED_PACKAGES ${RPM_REQUIRED_PACKAGES})
else()
    SET(REQUIRED_PACKAGES ${DEB_REQUIRED_PACKAGES})
endif()
###################################
# Files
###################################
FILE(GLOB EZTOOLS EZTools/*.h)
###################################
# Build lib versions
###################################
ADD_EXECUTABLE(${_PACKAGE_NAME} src/main.cpp ${EZTOOLS} EZTools/EZUniversalLogger.h EZTools/EZNetworkTests.h)
TARGET_INCLUDE_DIRECTORIES(${_PACKAGE_NAME} PUBLIC EZTools)
TARGET_LINK_LIBRARIES(${_PACKAGE_NAME} ${_TLL})
###################################
# Install methods
###################################
install(DIRECTORY EZTools/ DESTINATION ${_INCLUDE_DIR})
###################################
# CPack Stuff
###################################
SET(CPACK_PACKAGE_VERSION ${PROJECT_VERSION})
SET(CPACK_PACKAGING_INSTALL_PREFIX "/usr")
SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY ${CPACK_PACKAGE_DESCRIPTION})
SET(CPACK_PACKAGE_RELOCATABLE "false")
###################################
# RPM Stuff
###################################
if (os_name STREQUAL "el")
    SET(CPACK_RPM_PACKAGE_REQUIRES ${REQUIRED_PACKAGES})
    set(CPACK_PACKAGE_NAME "${_PACKAGE_NAME}")
    SET(CPACK_GENERATOR "RPM")
    MESSAGE("** BUILDING RPM")
    SET(CPACK_RPM_PACKAGE_AUTOREQ "NO")
    SET(CPACK_RPM_PACKAGE_ARCHITECTURE ${CMAKE_SYSTEM_PROCESSOR})
    SET(CPACK_RPM_PACKAGE_DESCRIPTION ${CPACK_PACKAGE_DESCRIPTION_SUMMARY})
    MESSAGE("** CMAKE_SYSTEM ${CMAKE_SYSTEM}")
    SET(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${PACKAGE_VERSION}-${CPACK_PACKAGE_RELEASE}.${os_version}.${CMAKE_SYSTEM_PROCESSOR}")
    MESSAGE("** ${CPACK_PACKAGE_FILE_NAME}")
elseif(os_name STREQUAL "fc")
    SET(CPACK_RPM_PACKAGE_REQUIRES ${REQUIRED_PACKAGES})
    set(CPACK_PACKAGE_NAME "${_PACKAGE_NAME}")
    SET(CPACK_GENERATOR "RPM")
    MESSAGE("** BUILDING RPM")
    SET(CPACK_RPM_PACKAGE_AUTOREQ "NO")
    SET(CPACK_RPM_PACKAGE_ARCHITECTURE ${CMAKE_SYSTEM_PROCESSOR})
    SET(CPACK_RPM_PACKAGE_DESCRIPTION ${CPACK_PACKAGE_DESCRIPTION_SUMMARY})
    MESSAGE("** CMAKE_SYSTEM ${CMAKE_SYSTEM}")
    SET(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${PACKAGE_VERSION}-${CPACK_PACKAGE_RELEASE}.${os_version_suffix}.${CMAKE_SYSTEM_PROCESSOR}")
    MESSAGE("** ${CPACK_PACKAGE_FILE_NAME}")
else()
    SET(CPACK_GENERATOR "DEB")
    MESSAGE("** BUILDING DEB")
    SET(CPACK_DEBIAN_PACKAGE_DEPENDS ${REQUIRED_PACKAGES})
    SET(CPACK_DEBIAN_PACKAGE_RELEASE ${CPACK_PACKAGE_RELEASE})
    set(CPACK_PACKAGE_NAME "${_PACKAGE_NAME}")
    SET(CPACK_DEBIAN_PACKAGE_MAINTAINER ${CPACK_PACKAGE_CONTACT})
    SET(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${PACKAGE_VERSION}-${CPACK_PACKAGE_RELEASE}.${CMAKE_SYSTEM_PROCESSOR}")
    SET(CPACK_DEBIAN_ARCHITECTURE ${CMAKE_SYSTEM_PROCESSOR})
    SET(CPACK_DEBIAN_PACKAGE_DESCRIPTION ${CPACK_PACKAGE_DESCRIPTION})
    SET(CPACK_DEBIAN_PACKAGE_SECTION ${_DEB_SECTION})
    MESSAGE("** CMAKE_SYSTEM ${CMAKE_SYSTEM}")
    MESSAGE("** ${CPACK_PACKAGE_FILE_NAME}")
endif()

if(os_name STREQUAL "el")
    ADD_DEFINITIONS(-DVERSION="${PACKAGE_VERSION}" -DCENTOS8="ON")
elseif(os_name STREQUAL "fc")
    ADD_DEFINITIONS(-DVERSION="${PACKAGE_VERSION}")
else()
    ADD_DEFINITIONS(-DVERSION="${PACKAGE_VERSION}")
endif()
INCLUDE(CPack)