EZTools Docs

EZApplication.h

class EZApplication
	EZApplication(int argc, char* argv[], EZTools::EZString appName, EZTools::EZString appVersion = VERSION)
	~EZApplication()
	EZGetOpt::GetOpt *getOpt
	EZDateTime::CurrentDateTime *currentDateTime
class EZNagiosPlugin : public EZApplication
	EZNagiosPlugin(int argc, char *argv[], EZTools::EZString appName, EZTools::EZString appVersion = VERSION)
            : EZApplication(argc, argv, appName, appVersion)
    ~EZNagiosPlugin()
    EZHTTP::HTTP *http
    EZNagios::Nagios nagios
class EZTestApplication : public EZApplication
	EZTestApplication(int argc, char *argv[], EZTools::EZString appName, EZTools::EZString appVersion = VERSION)
            : EZApplication(argc, argv, appName, appVersion)
    ~EZTestApplication()
    EZOutput::EZScreen::ScreenOutput out
    EZHTTP::HTTP *http
    EZConfig::Config *config
    EZLogger::Logger log

EZConfig.h

class Config
	nlohmann::json root
	Config()
	explicit Config(EZFiles::URI &confFile)
	~Config()
	void init(EZFiles::URI &confFile)
	bool isThere()
	EZTools::EZString asString()

EZCSV.h

typedef std::vector<std::vector<EZTools::EZString>> ezcsv;
class CSVFile
	CSVFile(EZTools::EZString filename, bool hasHeaders = false)
	~CSVFile()
	ezcsv csv()
	std::vector<EZTools::EZString> headers()
	void addHeaders(std::vector<EZTools::EZString> headers)
	unsigned long int columns()
	unsigned long int rows()

EZDateTime.h 

inline EZTools::EZString intToMonth(int monthNumber)
inline EZTools::EZString intToDay(int dayNumber)
inline EZTools::EZString dateSuffix(int dayNumber)
inline uint64_t CurrentTime_milliseconds()
inline uint64_t CurrentTime_microseconds()
inline uint64_t CurrentTime_nanoseconds()
class LocalTime
	LocalTime()
	LocalTime(int year, int month, int day, int hour, int min, int sec, long gmOffset, uint64_t millis = 0)
	~LocalTime()
	void update()
	int year()
	int month()
	int day()
	int hour()
	int hourAMPM()
	bool isAM()
	int min()
	int sec()
	uint64_t millis()
	long gmOffset()
	EZTools::EZString zone()
	int weekday()
	int yearday()
	int dst()
	void swap(LocalTime localTime)
class CurrentDateTime
	CurrentDateTime()
	~CurrentDateTime()
	EZTools::EZString ymdto()
	EZTools::EZString ymdt()
	EZTools::EZString stamp()
	EZTools::EZString fancy()
	EZTools::EZString time()
	EZTools::EZString date()
	EZTools::EZString ymdtampm()
class EZDT
	EZDT()
	explicit EZDT(EZTools::EZString ISO8601)
	~EZDT()
	void ISO8601(EZTools::EZString iso8601)
	LocalTime dateTime()
	EZTools::EZString ymdto()
	EZTools::EZString ymdt()
	EZTools::EZString stamp()
	EZTools::EZString fancy()
class Timer
	Timer()
	~Timer()
	void start()
	void stop()
	long long asMicroseconds()
	float asMillisenconds()
	float asSeconds()
	float asMinutes()
	float asHours()

EZDNS.h

enum RECORD_T
inline EZTools::EZString dnsLookup(EZTools::EZString ip, RECORD_T type = A)

EZFiles.h

enum _BACKUP_T
enum _STATFILE_T
enum ACCESS_T
inline EZTools::EZString tempDir()
inline EZTools::EZString homeDir()
inline EZTools::EZString currentDir()
inline bool accessCheck(ACCESS_T accessType, std::string filename)
inline EZTools::EZReturn<bool> copyFile(URI &source, URI &destination, bool overwrite = false)
inline EZTools::EZReturn<EZTools::EZString> copyFileToEZString(URI &source)
inline EZTools::EZReturn<bool> copyStringToFile(EZTools::EZString stringToCopy, URI destination)
inline EZTools::EZReturn<std::vector<EZTools::EZString>> copyFileToVectorOfEZString(URI &source)
inline EZTools::EZReturn<URI> backupFile(URI &source, EZTools::EZString extention)
inline EZTools::EZReturn<bool> deleteFile(URI &source)
inline EZTools::EZReturn<bool> moveFile(URI &source, URI &destination, bool overwrite = false)
inline EZTools::EZReturn<bool> chownFile(URI &source, EZTools::EZString user_name, EZTools::EZString group_name)
inline EZTools::EZReturn<bool> makedir(URI &dir, bool doALL = false)
inline EZTools::EZReturn<bool> makeSymLink(URI &source, URI &desination)
inline EZTools::EZReturn<bool> chmod(URI &source, int mode)
inline EZTools::EZReturn<double > testWriteSpeed(URI dir, int numberOfMegabytes)
class EZFileStat
	EZFileStat()
	EZFileStat(EZTools::EZString filename)
	~EZFileStat()
	void setPath(EZTools::EZString filename)
	void update()
	int owner()
	int group()
	int other()
	long size()
	_STATFILE_T fileType()
	EZTools::EZString fileTypeAsStr()
	int links()
	int inode()
	int hardLinks()
	int fileOwnerID()
	int fileGroupID()
	int deviceID()
	int blockSize()
	int numberOfBlocks()
	bool isThere()
	bool isReadable()
	bool isWriteable()
	EZTools::EZString permsAsStr()
	int permsAsInt()
class URI
	URI()
	URI(EZTools::EZString URILocation)
	~URI()
	void setPath(EZTools::EZString URILocation)
	EZTools::EZString path()
	EZTools::EZString basepath()
	EZTools::EZString filename()
	void update()
	bool isThere()
	bool isReadable()
	bool isWriteable()
	bool basePathIsThere()
	bool basePathIsReadable()
	bool basePathIsWriteable()
	int fileOwnerPerms()
	int fileGroupPerms()
	int fileOtherPerms()
	int filePermsAsInt()
	int basepathOwnerPerms()
	int basepathGroupPerms()
	int basepathOtherPerms()
	int basepathPermsAsInt()
	_STATFILE_T fileType()
	EZTools::EZString fileTypeAsEZString()

EZGetOpt.h

typedef std::map<char, EZTools::EZString> EZOpts
class GetOpt
	GetOpt()
	GetOpt(int argc, char* argv[], EZTools::EZString programName, EZTools::EZString version)
	~GetOpt()
	void init(int argc, char* argv[], EZTools::EZString programName, EZTools::EZString version)
	EZTools::EZString programName()
	void addCommandLineOption(EZTools::EZString option, EZTools::EZString description)
	void addUnpairedOptions(EZTools::EZString options)
	void addCopyright(EZTools::EZString copyright)
	void addExtraMessage(EZTools::EZString extraMessage)
	EZOpts options()
	bool option(EZTools::EZString opt)
	EZTools::EZString valueForOption(EZTools::EZString opt)
	void showHelp()
	void showVersion()
	EZTools::EZReturn<bool> parseOptions()
	std::vector<EZTools::EZString> unpairedArgs()
	int requiredUnpairedArgs()

EZHTTP.h

enum CONNECT_T
class HTTPHeaders
	HTTPHeaders()
	HTTPHeaders(EZTools::EZString headerString)
	~HTTPHeaders()
	void addPair(EZTools::EZString key, EZTools::EZString value)
	std::map<EZTools::EZString, EZTools::EZString> as_map()
	EZTools::EZString as_string()
	std::vector<std::string> as_stringList()
	int responseCode()
class HTTPResponse
	HTTPResponse()
	~HTTPResponse()
	void data(std::string data)
	EZTools::EZString data()
	void responseCode(CURLcode code)
	CURLcode responseCode()
	void wasSuccessful(bool success)
	bool wasSuccessful()
	void message(std::string text)
	EZTools::EZString message()
	void contentType(std::string type)
	EZTools::EZString contentType()
	void headerSize(long size)
	long headerSize()
	void headerString(EZTools::EZString headerstring)
	void responseTimeInMillis(float t)
	float responseTimeInMillis()
	HTTPHeaders headers()
class URI
	enum URI_T
	URI()
	URI(EZTools::EZString URILocation, int timeout = 15, EZTools::EZString username = "",
            EZTools::EZString password = "", bool hasRealCert = true)
    ~URI()
    EZTools::EZString path()
    EZTools::EZString basepath()
    bool canConnect()
    float connectTime()
    bool isThere()
    int timeout()
    bool hasRealCert()
    EZTools::EZString username()
    EZTools::EZString password()
class HTTP
	HTTP()
	HTTP(EZTools::EZString userAgent)
	HTTP(EZTools::EZString userAgent, int timeout, bool follow = true)
	~HTTP()
	HTTPResponse get(URI uri, bool verbose = false)
	HTTPResponse head(URI uri, bool verbose = false)

EZIP.h

enum _INTERFACE_T
struct IPAddressData
inline bool isInterfaceUp(std::string interface)
inline IPAddresses localIPAddresses()
inline EZHTTP::URI ezipToURI(EZHTTP::CONNECT_T type, EZIP::IPAddress &ezip, EZTools::EZString path,
            int timeout = 15, EZTools::EZString username = "", EZTools::EZString password = "",
            bool hasRealCert = true)
class IPAddresses
	IPAddresses()
	~IPAddresses()
	void addPair(EZTools::EZString interface, EZTools::EZString v4Address)
	EZTools::EZString wifiAddress()
	EZTools::EZString ethernetAddress()
	EZTools::EZString localAddress()
	EZTools::EZString returnBest()
class IPAddress
	IPAddress()
	explicit IPAddress(EZTools::EZString address)
	~IPAddress()
	void init(EZTools::EZString ip)
	bool isGood()
	EZTools::EZString asString()
	void port(int portNumber)
	int port()
	bool canConnect()
	float connectTime()
class LocalIPAddress
	LocalIPAddress()
	~LocalIPAddress()
	void retest()
	bool testStack()
	bool isGoodIP()
	EZTools::EZString asString()
	bool isRoutable()
	bool canRoute()
	EZTools::EZString NATAddress()
	EZTools::EZString interface()
	bool hasInternet()
	_INTERFACE_T interfaceType()

EZJSON.h

class EZJSON
	nlohmann::json root
	EZJSON()
	EZJSON(EZTools::EZString jsonString)
	EZJSON(EZCSV::CSVFile csvFile)
	~EZJSON()

EZLinux.h

typedef std::vector<EZTools::EZString> PATHSTOR
inline void EZLongSleep(long minutes)
inline void EZSleep(long seconds)
inline void EZNanoSleep(long milliseconds)
inline EZTools::EZString environmentVar(EZTools::EZString name, EZTools::EZString defaultValue = "")
inline PATHSTOR path()
inline EZTools::EZString hostname()
inline bool runningAsRoot()
inline int uid()
inline EZTools::EZString whoami()
inline EZTools::EZReturn<EZTools::EZString> exec(EZTools::EZString command)
inline EZTools::EZReturn<std::vector<SystemdObject>> systemdList()
inline EZTools::EZReturn<SystemdObject> getSystemdService(EZTools::EZString serviceName)
inline EZTools::EZReturn<std::vector<SystemdObject>> getSystemdSub(EZTools::EZString subName)
class SystemdObject
	SystemdObject()
	SystemdObject(EZTools::EZString unit, EZTools::EZString load, EZTools::EZString active,
                EZTools::EZString sub, EZTools::EZString description)
    ~SystemdObject()
    void init(EZTools::EZString unit, EZTools::EZString load, EZTools::EZString active,
                  EZTools::EZString sub, EZTools::EZString description)
    EZTools::EZString unit()
    EZTools::EZString load()
    EZTools::EZString active()
    EZTools::EZString sub()
    EZTools::EZString description()

EZLogger.h

enum _LOG_LEVEL_T
class Logger
	Logger()
	Logger(EZFiles::URI &logFileURI, _LOG_LEVEL_T defaultLogLevel)
	explicit Logger(EZFiles::URI &configFile)
	~Logger()
	void init(EZFiles::URI &logFileURI, _LOG_LEVEL_T defaultLogLevel)
	void writeLevel(_LOG_LEVEL_T writeLevel)
	void tempLogLevel(_LOG_LEVEL_T tempLogLevel)
	void defaultLogLevel()
	std::string LogLevelAsString()
	bool isOpen()
	friend std::ostream &operator<<(Logger &log, T op)

EZNagios.h

enum _NAGIOS_EXIT_LEVELS_T
class Nagios
	Nagios()
	~Nagios()
	void exit(_NAGIOS_EXIT_LEVELS_T exitLevel)
	friend std::ostream &operator<<(Nagios &log, T op)

EZOutput.h

enum _COLOR_T
enum _CONSOLE_T
enum _SPECIAL_CHAR_T
enum _CC_T
enum _MENUPOS_T
enum _ERASE_DISPLAY_T
enum _LINE_T
enum _ALIGNMENT_T
inline void showCursor(bool show)
inline std::string putChar(EZScreen::_SPECIAL_CHAR_T ch, bool color = true)
inline EZTools::EZString textCentered(EZTools::EZString text, unsigned long width)
inline EZTools::EZString textLeft(EZTools::EZString text, int width)
inline EZTools::EZString textRight(EZTools::EZString text, int width)
class ScreenOutput : public std::ostream
	ScreenOutput() : std::ostream(std::cout.rdbuf())
	void color(bool showColor)
	int maxX()
	int maxY()
	int minX()
	int minY()
	bool colorSupport()
	void updateSize()
	void clrscr()
	void setColor(_COLOR_T foreground, _COLOR_T background = EZ_LAST_COLOR)
	void reset()
	void setLast()
	void setConsole(_CONSOLE_T console)
	void test(int ccode)
	void cursorMoveToXY(int x, int y)
	void cursorMoveUp(int lines)
	void cursorMoveDown(int lines)
	void cursorMoveForward(int chars)
	void cursorMoveBackwards(int chars)
	void cursorSavePos()
	void cursorRestorePos()
	void cursorOff()
	void cursorOn()
	void eraseDisplay(_ERASE_DISPLAY_T eType)
	void eraseLine(_LINE_T line)
	void drawHorizontalLine(int xLeft, int xRight, int y)
	void drawHorizontalLineInPlace(int width)
	void drawHorizontalLineInPlaceWithTitle(int width, EZTools::EZString title,
            _COLOR_T lineColor, _COLOR_T textColor, _ALIGNMENT_T alignment)
    void drawVertical(int x, int yTop, int yBottom)
    void drawBox(int leftX, int leftY, int rightX, int rightY, bool fill = false)
    void drawBoxWithTitle(EZTools::EZString title, _ALIGNMENT_T alignment, _COLOR_T lineColor,
            _COLOR_T titleColor, int leftX, int leftY, int rightX, int rightY, bool fill = false)
    void getMouseClick()
    EZTools::EZString dialogAB(_COLOR_T lineColor, _COLOR_T titleColor, _COLOR_T buttonTextColor,
            EZTools::EZString title, EZTools::EZString lButton, EZTools::EZString rButton,
            EZTools::EZString lValue, EZTools::EZString rValue,
            std::vector<EZTools::EZString> text = std::vector<EZTools::EZString>())

EZProc.h

struct EZProcess
struct SysLoad
struct CPUs
class EZProcessList
	EZProcessList()
	~EZProcessList()
	void updateProcessList()
	std::vector<EZProcess> procs()
	EZProcess pid(int pid)
	std::vector<EZProcess> ppid(int ppid)
	std::vector<EZProcess> baseCmd(EZTools::EZString baseCmd)
	std::vector<EZProcess> baseCmdRegexMatch(EZTools::EZString baseCmd)
class RAMSize
	RAMSize()
	virtual ~RAMSize()
	float asMegs()
	float asGigs()
class MemInfo
	MemInfo()
	virtual ~MemInfo()
	void update()
class CPUInfo
	CPUInfo()
	virtual ~CPUInfo()
	std::vector<CPUs> cpu()
inline EZTools::EZString kernelVersion()
inline SysLoad loadavg()
inline SysLoad RealLoad()

EZRandom.h

inline int init()
template <class T>
    inline T urandom()
class EZRand
	EZRand()
	~EZRand()
	int Int()
	unsigned long int UnsignedLong()
	unsigned long long int UnsignedLongLong()
	float Float()
	double Double()
	int Int(uint32_t upper)
	char Char()
	bool Bool()
class EZDice
	EZDice()
	~EZDice()
	int coin()
	EZTools::EZString coinAsString()
	int d4(int times)
	int d6(int times)
	int d8(int times)
	int d10(int times)
	int d12(int times)
	int d20(int times)

EZTools.h

inline T round(T var, int precision)
class EZString : public std::string
	EZString() : std::string()
	EZString(const std::string &s) : std::string(s)
	EZString(const std::string &s, size_t n) : std::string(s, n)
	EZString(const char *s, size_t n) : std::string(s, n)
	EZString(const char *s) : std::string(s)
	EZString(size_t n, char c) : std::string(n, c)
	EZString(int i)
	EZString(float f)
	EZString(double d)
	EZString(long l)
	EZString(unsigned long l)
	EZString(unsigned long long l)
	template<class InputIterator>
        EZString(InputIterator first, InputIterator last) : std::string(first, last)
    void join(EZString separator, std::vector<EZString> &list)
    unsigned long int count(EZString s) const
    EZString &lower() const
    EZString &upper() const
    bool isLower() const
    bool isUpper() const
    bool isInt() const
    int asInt() const
    bool isLong() const
    int asLong() const
    bool isUnsignedLong() const
    unsigned long asUnsignedLong() const
    bool isUnsignedLongLong() const
    unsigned long long asUnsignedLongLong() const
    bool isFloat() const 
    float asFloat() const
    bool isDouble() const
    bool isBool() const
    bool asBool() const
    float asDouble() const
    bool isAlpha() const
    std::string str() const
    bool regexMatch(const EZString &regexString, bool caseInsensitive = false)
    std::vector<EZString> regexExtract(EZString regexString) const
    std::vector<EZString> split(EZString delimiter) const
    std::vector<EZTools::EZString> regexSplit(EZTools::EZString regexString)
    EZString &regexReplace(EZString regexString, EZString replaceWith)
    EZString &removeNonPrintable()
    EZString &chomp()
    EZString &chopAtLast(EZString delimiter)
    EZString &removeExtraSpaces()
    EZString &removeOpeningSpaces()
    EZString &removeTrailingSpaces()
    EZString &asHex()
    EZString &cat(EZString value)
    EZString &replaceAll(const EZString &from, const EZString &to)
template<class T>
class EZReturn
	EZReturn()
	EZReturn(int exitCode, EZString message, T Data)
	~EZReturn()
	bool wasSuccessful()
	void wasSuccessful(bool success)
	int exitCode()
	void exitCode(int value)
	EZString message()
	void message(EZString value)
	T data;